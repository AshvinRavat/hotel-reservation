// Reservation

// Room Details. -> room_id, get directly
// Hotel Details -> hotel_id, get directly via room_id
// StartDate To End Date. -> via form get directly.
// Total Persons. -> via form get directly.
// Total Rooms. -> via form & make logic
// Total Amount. -> via form make logic for this
// Status. -> default base on the room by owner.


Table Structure :: room-reservations
id,
room id,
customer_id,
start_date,
end_date,
total_persons,
total_rooms,
total_amount,
status.


// model, migrations, controller,
// views : bill-page, success.

// reservation flow :

// how bill will be generate & list the bill to customers :
    // total days
        // calculate days 05 to 06 = 1 day
    // total amount
     // days * price
     // 1 * 1500 = 1500


// can be book :
   // when booking date is available
        // if there is booking from 10-07 to 15-7 then
            // from current date 5-07 to up to 9-7 booking can be possible

// can not book  :
    // can not book while date is reserved.


// how to do & dont make booking logic :

// jo 5 to 10 booking
    // if 11 to 15 booking is poosbile

    Chekcing Booking available afte all reservation
    end_date on reservation is = 10;
    start_date from user is = 11;
    cheking by compare with edn date
        end_date > start_date
        10 > 11 not
        10 == 11 not

        if returns false negative value means there is no booking is available so we can book

      